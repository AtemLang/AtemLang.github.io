"use strict";(self.webpackChunkstd_atem_doc=self.webpackChunkstd_atem_doc||[]).push([[3963],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>N});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var u=a.createContext({}),d=function(t){var e=a.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=d(t.components);return a.createElement(u.Provider,{value:e},t.children)},o="mdxType",g={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,u=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),o=d(n),k=r,N=o["".concat(u,".").concat(k)]||o[k]||g[k]||l;return n?a.createElement(N,i(i({ref:e},m),{},{components:n})):a.createElement(N,i({ref:e},m))}));function N(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=k;var p={};for(var u in e)hasOwnProperty.call(e,u)&&(p[u]=e[u]);p.originalType=t,p[o]="string"==typeof t?t:r,i[1]=p;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},1490:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>u,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const l={},i="Types",p={unversionedId:"Language/Types",id:"Language/Types",title:"Types",description:"Built-in Types",source:"@site/docs/02-Language/02-Types.md",sourceDirName:"02-Language",slug:"/Language/Types",permalink:"/docs/Language/Types",draft:!1,editUrl:"https://github.com/AtemLang/atem/tree/main/packages/create-docusaurus/templates/shared/docs/02-Language/02-Types.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"documentSidebar",previous:{title:"Comments",permalink:"/docs/Language/Comments"},next:{title:"Values",permalink:"/docs/Language/Values"}},u={},d=[{value:"Built-in Types",id:"built-in-types",level:2},{value:"Built-in Values",id:"built-in-values",level:2}],m={toc:d},o="wrapper";function g(t){let{components:e,...n}=t;return(0,r.kt)(o,(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"types"},"Types"),(0,r.kt)("h2",{id:"built-in-types"},"Built-in Types"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default Initializer"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"i8"),(0,r.kt)("td",{parentName:"tr",align:null},"Signed 8-bit integer"),(0,r.kt)("td",{parentName:"tr",align:null},"0:i8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"i16"),(0,r.kt)("td",{parentName:"tr",align:null},"Signed 16-bit integer"),(0,r.kt)("td",{parentName:"tr",align:null},"0:i16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"i32"),(0,r.kt)("td",{parentName:"tr",align:null},"Signed 32-bit integer"),(0,r.kt)("td",{parentName:"tr",align:null},"0:i32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"i64"),(0,r.kt)("td",{parentName:"tr",align:null},"Signed 64-bit integer"),(0,r.kt)("td",{parentName:"tr",align:null},"0:i64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"i128"),(0,r.kt)("td",{parentName:"tr",align:null},"Signed 128-bit integer"),(0,r.kt)("td",{parentName:"tr",align:null},"0:i128")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"u8"),(0,r.kt)("td",{parentName:"tr",align:null},"Unsigned 8-bit integer"),(0,r.kt)("td",{parentName:"tr",align:null},"0:u8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"u16"),(0,r.kt)("td",{parentName:"tr",align:null},"Unsigned 16-bit integer"),(0,r.kt)("td",{parentName:"tr",align:null},"0:u16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"u32"),(0,r.kt)("td",{parentName:"tr",align:null},"Unsigned 32-bit integer"),(0,r.kt)("td",{parentName:"tr",align:null},"0:u32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"u64"),(0,r.kt)("td",{parentName:"tr",align:null},"Unsigned 64-bit integer"),(0,r.kt)("td",{parentName:"tr",align:null},"0:u64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"u128"),(0,r.kt)("td",{parentName:"tr",align:null},"Unsigned 128-bit integer"),(0,r.kt)("td",{parentName:"tr",align:null},"0:u128")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"f16"),(0,r.kt)("td",{parentName:"tr",align:null},"16-bit floating point (10-bit mantissa) IEEE-754-2008 binary16"),(0,r.kt)("td",{parentName:"tr",align:null},"0.0:f16")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"f32"),(0,r.kt)("td",{parentName:"tr",align:null},"32-bit floating point (23-bit mantissa) IEEE-754-2008 binary32"),(0,r.kt)("td",{parentName:"tr",align:null},"0.0:f32")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"f64"),(0,r.kt)("td",{parentName:"tr",align:null},"64-bit floating point (52-bit mantissa) IEEE-754-2008 binary64"),(0,r.kt)("td",{parentName:"tr",align:null},"0.0:f64")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"f80"),(0,r.kt)("td",{parentName:"tr",align:null},"80-bit floating point (64-bit mantissa) IEEE-754-2008 80-bit extended precision"),(0,r.kt)("td",{parentName:"tr",align:null},"0.0:f80")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"f128"),(0,r.kt)("td",{parentName:"tr",align:null},"128-bit floating point (112-bit mantissa) IEEE-754-2008 binary128"),(0,r.kt)("td",{parentName:"tr",align:null},"0.0:f128")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"false")),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"void"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"void{}")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"c8"),(0,r.kt)("td",{parentName:"tr",align:null},"UTF-8 code unit"),(0,r.kt)("td",{parentName:"tr",align:null},"'\\xFF'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"c16"),(0,r.kt)("td",{parentName:"tr",align:null},"UTF-16 code unit"),(0,r.kt)("td",{parentName:"tr",align:null},"'\\uFFFF'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"c32"),(0,r.kt)("td",{parentName:"tr",align:null},"UTF-32 code unit"),(0,r.kt)("td",{parentName:"tr",align:null},"'\\U0000FFFF'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Built-in runtime string type"),(0,r.kt)("td",{parentName:"tr",align:null},'"":string')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ct_int"),(0,r.kt)("td",{parentName:"tr",align:null},"Type of integer literals, used in compile-time integer operations"),(0,r.kt)("td",{parentName:"tr",align:null},"0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ct_float"),(0,r.kt)("td",{parentName:"tr",align:null},"Type of float literals, used in compile-time float operations"),(0,r.kt)("td",{parentName:"tr",align:null},"0.0")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ct_string"),(0,r.kt)("td",{parentName:"tr",align:null},"Type of string literals, used in compile-time string operations"),(0,r.kt)("td",{parentName:"tr",align:null},'""')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ct_char"),(0,r.kt)("td",{parentName:"tr",align:null},"Type of char literals, used in compile-time char operations"),(0,r.kt)("td",{parentName:"tr",align:null},"'\\xFF'")))),(0,r.kt)("h2",{id:"built-in-values"},"Built-in Values"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")," value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")," value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"undefined"),(0,r.kt)("td",{parentName:"tr",align:null},"Used to leave variable's value undefined")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"null"),(0,r.kt)("td",{parentName:"tr",align:null},"The value of null optionals and pointers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"default"),(0,r.kt)("td",{parentName:"tr",align:null},"Used to invoke variable's default initializer")))))}g.isMDXComponent=!0}}]);