"use strict";(self.webpackChunkstd_atem_doc=self.webpackChunkstd_atem_doc||[]).push([[5958],{3905:(t,e,r)=>{r.d(e,{Zo:()=>s,kt:()=>y});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var u=n.createContext({}),d=function(t){var e=n.useContext(u),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},s=function(t){var e=d(t.components);return n.createElement(u.Provider,{value:e},t.children)},l="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},p=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,u=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),l=d(r),p=a,y=l["".concat(u,".").concat(p)]||l[p]||m[p]||i;return r?n.createElement(y,o(o({ref:e},s),{},{components:r})):n.createElement(y,o({ref:e},s))}));function y(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,o=new Array(i);o[0]=p;var c={};for(var u in e)hasOwnProperty.call(e,u)&&(c[u]=e[u]);c.originalType=t,c[l]="string"==typeof t?t:a,o[1]=c;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},9041:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:1,title:"Standard Library"},o="Atem Standard Library",c={unversionedId:"Standard Library/stdlib",id:"Standard Library/stdlib",title:"Standard Library",description:"Introduction",source:"@site/docs/03-Standard Library/stdlib.md",sourceDirName:"03-Standard Library",slug:"/Standard Library/stdlib",permalink:"/docs/Standard Library/stdlib",draft:!1,editUrl:"https://github.com/AtemLang/atem/tree/main/packages/create-docusaurus/templates/shared/docs/03-Standard Library/stdlib.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Standard Library"},sidebar:"documentSidebar",previous:{title:"Std-atem Style Guide",permalink:"/docs/Language/Appendix/Style"},next:{title:"Inspirations List",permalink:"/docs/Inspirations List"}},u={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Module Structure",id:"module-structure",level:2}],s={toc:d},l="wrapper";function m(t){let{components:e,...r}=t;return(0,a.kt)(l,(0,n.Z)({},s,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"atem-standard-library"},"Atem Standard Library"),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("h2",{id:"module-structure"},"Module Structure"),(0,a.kt)("mermaid",{value:"---\ntitle: Atem Standard Library Structure-Language Support\n---\nflowchart BT\n\tstd\n\tlanguage--\x3estd\n\tkeyword--\x3elanguage\n\toperator--\x3elanguage"}),(0,a.kt)("mermaid",{value:"---\ntitle: Atem Standard Library Structure-Infrasturcture\n---\nflowchart BT\n\tstd\n\tinfrastructure--\x3estd\n\t\n\tmemory--\x3einfrastructure\n\tbuffer--\x3ememory\n\tallocator--\x3ememory\n\t\n\tenvironment--\x3einfrastructure\n\thardware--\x3eenvironment\n\tos--\x3eenvironment\n\t\n\tio--\x3einfrastructure\n\t\n\tmeta--\x3einfrastructure\n\tcomptime--\x3emeta\n\truntime--\x3emeta\n\tconcept--\x3ecomptime\n\tstaticinjection[injection]--\x3ecomptime\n\tstaticreflect[reflect]--\x3ecomptime\n\tjit--\x3eruntime\n\tdyninjection[injection] --\x3e runtime\n\tdynreflect[reflect]--\x3eruntime"}),(0,a.kt)("mermaid",{value:"---\ntitle: Atem Standard Library Structure-User\n---\nflowchart BT\n\tstd\n\tuser--\x3estd\n\tio--\x3euser\n\tmath--\x3euser\n\tsecurity--\x3euser\n\talgorithm--\x3emath\n\trange--\x3euser\n\tasync--\x3euser\n\texecutor--\x3easync\n\tthread--\x3easync\n\tfiber--\x3easync\n\tcontainer--\x3erange"}))}m.isMDXComponent=!0}}]);