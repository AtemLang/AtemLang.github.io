"use strict";(self.webpackChunkstd_atem_doc=self.webpackChunkstd_atem_doc||[]).push([[917],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var m=r.createContext({}),s=function(e){var t=r.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(m.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,m=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=o,g=p["".concat(m,".").concat(d)]||p[d]||u[d]||i;return n?r.createElement(g,a(a({ref:t},c),{},{components:n})):r.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[p]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},867:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={},a="Comments",l={unversionedId:"Language/Comments/Overview",id:"Language/Comments/Overview",title:"Comments",description:"Single-Line Comments",source:"@site/docs/Language/Comments/Overview.md",sourceDirName:"Language/Comments",slug:"/Language/Comments/Overview",permalink:"/docs/Language/Comments/Overview",draft:!1,editUrl:"https://github.com/AtemLang/atem/tree/main/packages/create-docusaurus/templates/shared/docs/Language/Comments/Overview.md",tags:[],version:"current",frontMatter:{},sidebar:"documentSidebar",previous:{title:"Overview",permalink:"/docs/Language/Buildenvironment/Overview"},next:{title:"Overview",permalink:"/docs/Language/Debug/Overview"}},m={},s=[{value:"Single-Line Comments",id:"single-line-comments",level:3},{value:"Multiple-Line Comments",id:"multiple-line-comments",level:3},{value:"Doc Comments",id:"doc-comments",level:3}],c={toc:s},p="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"comments"},"Comments"),(0,o.kt)("h3",{id:"single-line-comments"},"Single-Line Comments"),(0,o.kt)("p",null,"A single-line comment starts with two slashes ",(0,o.kt)("inlineCode",{parentName:"p"},"//")," in std-atem:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-atem"},'import std.stdatem;\nimport std.stdatemlib;\n\nmain: func {\n    //A program that will output "Hello World" to the console\n    std.stdatemlib.io.println("Hello World!");  //Using println function to print\n}\n')),(0,o.kt)("h3",{id:"multiple-line-comments"},"Multiple-Line Comments"),(0,o.kt)("p",null,"A multiple-line comment is contained in ",(0,o.kt)("inlineCode",{parentName:"p"},"//{...}//")," block:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-atem"},'//{\nimporting the std-atem modules\n\n:)\n}//\nimport std.stdatem;\nimport std.stdatemlib;\n\nmain: func {\n    std.stdatemlib.io.println("Hello World!");\n}\n')),(0,o.kt)("h3",{id:"doc-comments"},"Doc Comments"))}u.isMDXComponent=!0}}]);