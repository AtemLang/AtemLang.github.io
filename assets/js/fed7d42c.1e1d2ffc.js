"use strict";(self.webpackChunkstd_atem_doc=self.webpackChunkstd_atem_doc||[]).push([[6241],{3905:(t,e,r)=>{r.d(e,{Zo:()=>m,kt:()=>g});var a=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function l(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},o=Object.keys(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var s=a.createContext({}),p=function(t){var e=a.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):l(l({},e),t)),r},m=function(t){var e=p(t.components);return a.createElement(s.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,o=t.originalType,s=t.parentName,m=i(t,["components","mdxType","originalType","parentName"]),d=p(r),c=n,g=d["".concat(s,".").concat(c)]||d[c]||u[c]||o;return r?a.createElement(g,l(l({ref:e},m),{},{components:r})):a.createElement(g,l({ref:e},m))}));function g(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=r.length,l=new Array(o);l[0]=c;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i[d]="string"==typeof t?t:n,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},8533:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:1,title:"Introduction"},l="Introduction",i={unversionedId:"intro",id:"intro",title:"Introduction",description:"WARNING: Standard Atem Sub-language is highly experimental.",source:"@site/docs/01-intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",draft:!1,editUrl:"https://github.com/AtemLang/atem/tree/main/packages/create-docusaurus/templates/shared/docs/01-intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Introduction"},sidebar:"documentSidebar",next:{title:"Comments",permalink:"/docs/Language/Comments"}},s={},p=[{value:"Design Goals",id:"design-goals",level:2},{value:"std-atem Standard Library",id:"std-atem-standard-library",level:2},{value:"Hello World",id:"hello-world",level:2}],m={toc:p},d="wrapper";function u(t){let{components:e,...r}=t;return(0,n.kt)(d,(0,a.Z)({},m,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"introduction"},"Introduction"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"WARNING: Standard Atem Sub-language is highly experimental.")),(0,n.kt)("p",null,"Standard Atem Sub-language(std-atem) is a general purpose programming sub-language built on the Atem Core Language(core-atem). std-atem takes inspiration from many other languages like C++,  ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/hsutter/cppfront"},"Cpp2"),", ",(0,n.kt)("a",{parentName:"p",href:"https://circle-lang.org"},"Circle"),", ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/carbon-language/carbon-lang"},"Carbon"),", ",(0,n.kt)("a",{parentName:"p",href:"https://www.rust-lang.org/"},"Rust"),", ",(0,n.kt)("a",{parentName:"p",href:"https://www.swift.org/documentation/"},"Swift"),", ",(0,n.kt)("a",{parentName:"p",href:"https://dlang.org/"},"D"),", ",(0,n.kt)("a",{parentName:"p",href:"https://ziglang.org/"},"Zig"),", ",(0,n.kt)("a",{parentName:"p",href:"https://scala-lang.org"},"Scala"),", ",(0,n.kt)("a",{parentName:"p",href:"https://kotlinlang.org/"},"Kotlin"),", ",(0,n.kt)("a",{parentName:"p",href:"https://www.haskell.org/"},"Haskell"),", and ",(0,n.kt)("a",{parentName:"p",href:"https://julialang.org/"},"Julia"),". You can use std-atem by importing the ",(0,n.kt)("inlineCode",{parentName:"p"},"std.stdatem")," module."),(0,n.kt)("h2",{id:"design-goals"},"Design Goals"),(0,n.kt)("p",null,"We expect that many sub-language, software and library will be built on the std-atem, so we set a few design goals for std-atem(in no particular order):"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Performant")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Scalable")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Robust")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Extensible and Customizable")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Expressive")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Consistent")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Opt-in Safety"))),(0,n.kt)("h2",{id:"std-atem-standard-library"},"std-atem Standard Library"),(0,n.kt)("p",null,"std-atem has its own standard library(called std-atem-lib) which contains commonly used algorithms, data structures,  and many other tools to help you build programs on std-atem. The std-atem-lib also has its own documentation, see here(WIP)."),(0,n.kt)("h2",{id:"hello-world"},"Hello World"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'//hello.atem\nimport std.stdatem;\nimport std.stdatemlib;\n\nmain: func {\n    std.stdatemlib.io.println("Hello World!");\n}\n')),(0,n.kt)("p",null,"The std-atem code sample above demonstrates how to create a program in std-atem that will output ",(0,n.kt)("inlineCode",{parentName:"p"},'"Hello World!"'),"."))}u.isMDXComponent=!0}}]);